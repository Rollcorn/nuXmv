MODULE cont_3eo_guide(start,cont_3EO_start, mode_select_completed, et_sep_cmd,
           h_dot_LT_0, q_bar_a_GRT_qbar_max_sep, m_mode, r0,
           cont_minus_z_compl, t_nav-t_et_sep_GRT_dt_min_z_102,
           ABS_q_orb_GRT_q_minus_z_max, ABS_r_orb_GRT_r_minus_z_max,
           excess_OMS_propellant, q_bar_a_LT_qbar_oms_dump,
           entry_mnvr_couter_LE_0, rcs_all_jet_inhibit,
           alt_GRT_alt_min_102_dump, t_nav-t_gmtlo_LT_t_dmp_last,
           pre_sep, cond_18, q_orb_LT_0, ABS_alf_err_LT_alf_sep_err,
           cond_20b, cond_21, ABS_beta_n_GRT_beta_max, cond_24, cond_26,
           cond_27, cond_29, mm602_OK)
VAR
    step: {1,a1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,
           b20, c20, d20, 21,22,23,24,25,26,27,28,29,exit, undef};
    call_RTLS_abort_task : boolean;
    first3: boolean; -- indicates if it is the first pass
    first8: boolean;
    first27: boolean;
    s_unconv : boolean;
    mode_2_indicator : boolean;
    et_sep_man_initiate : boolean;
    emerg_sep : boolean;
    cont_3eo_pr_delay : {minus_z_reg1, minus_z_reg2,
                minus_z_reg3, minus_z_reg4, minus_z_reg102, 0, 5};
    etsep_y_drift : {undef, minus_z_reg1, minus_z_reg2,
                minus_z_reg3, minus_z_reg4, minus_z_reg102, 0};
    fwd_rcs_dump_enable : boolean;
    fcs_accept_icnct : boolean;
    oms_rcs_i_c_inh_ena_cmd : boolean;
    orbiter_dump_ena : boolean;
    frz_3eo : boolean;
    high_rate_sep: boolean;
    entry_gains : boolean;
    cont_sep_cplt : boolean;
    pch_cmd_reg4 : boolean;
    alpha_ok : boolean;
    r :  {reg-1, reg0, reg1, reg2, reg3, reg4, reg102};
    early_sep : boolean;
--------------------------------------------
----- Additional Variables -----------------
--------------------------------------------
    rtls_lo_f_d_delay : {undef, 0};
    wcb2 : {undef, reg1_0, reg2_neg4, wcb2_3eo, reg4_0,
            reg102_undef, post_sep_0};
    q_gcb_i : {undef, quat_reg1, quat_reg2, quat_reg3, quat_reg4,
               quat_reg102_undef, quat_entry_M50_to_cmdbody};
    oms_nz_lim : {undef, oms_nz_lim_3eo, oms_nz_lim_iload, oms_nz_lim_std};
    contingency_nz_lim : {undef, contingency_nz_lim_3eo,
                   contingency_nz_lim_iload, contingency_nz_lim_std};



ASSIGN
 init(entry_gains) := FALSE;
 init(frz_3eo) := FALSE;
 init(cont_3eo_pr_delay) := 5;
 init(etsep_y_drift) := undef;
 init(r) := reg-1;
 init(step) := undef;
 init(call_RTLS_abort_task) := FALSE;
 init(first3) := TRUE;
 init(first8) := TRUE;
 init(first27) := TRUE;
 init(cont_sep_cplt) := FALSE;
 init(et_sep_man_initiate) := FALSE;
 init(alpha_ok) := FALSE;
 init(pch_cmd_reg4) := FALSE;

-- Assumed initializations:

 init(rtls_lo_f_d_delay) := undef;
 init(wcb2) := undef;
 init(q_gcb_i) := undef;
 init(oms_nz_lim) := undef;
 init(contingency_nz_lim) := undef;
 init(oms_rcs_i_c_inh_ena_cmd) := FALSE;
 init(orbiter_dump_ena) := FALSE;
-- init(early_sep) := FALSE;

-------------

 next(step) := nextstep;

 next(r) :=
   case
     step = a1 & (cont_3EO_start | mode_select_completed) : r0;
     step = 21 & cond_21 : reg4;
     step = 23 & ABS_beta_n_GRT_beta_max & !high_rate_sep : reg1;
     TRUE : r;
   esac;

 next(first3) :=
   case
     step = 3 & cont_3EO_start : FALSE;
     TRUE : first3;
   esac;

 next(first8) :=
   case
     step = 8 & excess_OMS_propellant & cont_3EO_start : FALSE;
     TRUE : first8;
   esac;

 next(first27) :=
   case
     step = 27 : FALSE;
     TRUE: first27;
   esac;

 next(s_unconv) :=
   case
     step = 3 : FALSE;
     TRUE : s_unconv;
   esac;

 next(call_RTLS_abort_task) :=
   case
     step = 3 : TRUE;
     TRUE : call_RTLS_abort_task;
   esac;

 next(mode_2_indicator) :=
   case
     step = 4 : TRUE;
     TRUE : mode_2_indicator;
   esac;

 next(et_sep_man_initiate) :=
   case
     step = 5 & h_dot_LT_0 & q_bar_a_GRT_qbar_max_sep & m_mode != mm102 : TRUE;
     step = 14 & pre_sep : TRUE;
     step = 19 & q_orb_LT_0 : TRUE;
     step = d20 : TRUE;
     step = 26 & cond_26 : TRUE;
     step = 29 & cond_29 : TRUE;
     TRUE : et_sep_man_initiate;
   esac;

 next(emerg_sep) :=
   case
     next(step) = 1 : FALSE;
     step = 5 & h_dot_LT_0 & q_bar_a_GRT_qbar_max_sep  & m_mode != mm102: TRUE;
     TRUE : emerg_sep;
   esac;

 next(cont_3eo_pr_delay) :=
   case
     next(step) = 1 : 5;
     step = 5 & h_dot_LT_0 & q_bar_a_GRT_qbar_max_sep & m_mode != mm102 :
                                                              minus_z_reg3;
     step = 7 & !cont_minus_z_compl & r = reg102 &
        t_nav-t_et_sep_GRT_dt_min_z_102 &
        (ABS_q_orb_GRT_q_minus_z_max | ABS_r_orb_GRT_r_minus_z_max) : 0;
     step = 14 & pre_sep : minus_z_reg102;
     step = 19 & q_orb_LT_0 : minus_z_reg4;
     step = d20 : minus_z_reg3;
     step = 26 & cond_26 : minus_z_reg2;
     step = 27 & first27 : minus_z_reg1;
     TRUE : cont_3eo_pr_delay;
   esac;

 next(etsep_y_drift) :=
   case
     step = 5 & h_dot_LT_0 & q_bar_a_GRT_qbar_max_sep & m_mode != mm102 :
                                                              minus_z_reg3;
     step = 7 & !cont_minus_z_compl & r = reg102 &
        t_nav-t_et_sep_GRT_dt_min_z_102 &
        (ABS_q_orb_GRT_q_minus_z_max | ABS_r_orb_GRT_r_minus_z_max) : 0;
     step = 14 & pre_sep : minus_z_reg102;
     step = 19 & q_orb_LT_0 : minus_z_reg4;
     step = d20 : minus_z_reg3;
     step = 26 & cond_26 : minus_z_reg2;
     step = 27 & first27 : minus_z_reg1;
    TRUE : etsep_y_drift;
   esac;

 next(fwd_rcs_dump_enable) :=
   case
     step = 8 & excess_OMS_propellant & first8 : FALSE;
     TRUE : fwd_rcs_dump_enable;
   esac;

 next(fcs_accept_icnct) :=
   case
     step = 9 & q_bar_a_LT_qbar_oms_dump & r != reg102 : TRUE;
     TRUE : fcs_accept_icnct;
   esac;

 next(oms_rcs_i_c_inh_ena_cmd) :=
   case
--     next(step) = 1 & oms_rcs_i_c_inh_ena_cmd : {0,1};
     next(step) = 1 & oms_rcs_i_c_inh_ena_cmd : FALSE; -- Assumed initialization
     step = 9 & q_bar_a_LT_qbar_oms_dump & r != reg102 : TRUE;
     TRUE : oms_rcs_i_c_inh_ena_cmd;
   esac;

 next(orbiter_dump_ena) :=
   case
     next(start) = TRUE : FALSE;                      -- Assumed initialization
     step = 9 & q_bar_a_LT_qbar_oms_dump & r != reg102 : TRUE;
     step = 13 & alt_GRT_alt_min_102_dump & t_nav-t_gmtlo_LT_t_dmp_last : TRUE;
     TRUE : orbiter_dump_ena;
   esac;

 next(frz_3eo) :=
   case
     next(step) = 1 : FALSE;
     step = 10 & entry_mnvr_couter_LE_0 & !rcs_all_jet_inhibit : FALSE;
     step = 28 & !et_sep_man_initiate : TRUE;
     TRUE : frz_3eo;
   esac;

 next(high_rate_sep) :=
   case
     step = 10 & entry_mnvr_couter_LE_0 & !rcs_all_jet_inhibit : FALSE;
     step = 25 : TRUE;
     TRUE : high_rate_sep;
   esac;

 next(entry_gains) :=
   case
     next(step) = 1 : FALSE;
     step = 10 & entry_mnvr_couter_LE_0 & !rcs_all_jet_inhibit : TRUE;
     TRUE : entry_gains;
   esac;

 next(cont_sep_cplt) :=
   case
     next(step) = 1 : FALSE;
     step = 12 & mm602_OK : TRUE;
     TRUE : cont_sep_cplt;
   esac;

 next(pch_cmd_reg4) :=
   case
     next(step) = 1 : FALSE;
     step = 18 & !pch_cmd_reg4 & cond_18 : TRUE;
     TRUE : pch_cmd_reg4;
   esac;

 next(alpha_ok) :=
   case
     next(step) = 1 : FALSE;
     step = 20 & ABS_alf_err_LT_alf_sep_err : TRUE;
     TRUE : alpha_ok;
   esac;

 next(early_sep) :=
   case
     step = 27 & first27 :
                 case
                   cond_27 : TRUE;
                   TRUE : FALSE;
                 esac;
     TRUE : early_sep;
   esac;

--------------------------------------------
----- Additional Variables -----------------
--------------------------------------------

 next(rtls_lo_f_d_delay) :=
   case
     next(start) = TRUE : undef;          -- Assumed initialization
     step = 8 & first8 & excess_OMS_propellant : 0;
     TRUE : rtls_lo_f_d_delay;
   esac;

 next(wcb2) :=
   case
     next(start) = TRUE : undef;          -- Assumed initialization
     step = 10 & entry_mnvr_couter_LE_0 : post_sep_0;
     step = 12 : case
                   r = reg4 : reg4_0;
                   TRUE : wcb2_3eo;
                 esac;
     step = 14 & pre_sep : reg102_undef;
     step = 15 : case
                   r = reg4 : reg4_0;
                   TRUE : wcb2_3eo;
                 esac;
     step = 25 : reg2_neg4;
     TRUE : wcb2;
   esac;

 next(q_gcb_i) :=
   case
     next(start) = TRUE : undef;          -- Assumed initialization
     step = 11 : quat_entry_M50_to_cmdbody;
     step = 14 & pre_sep : quat_reg102_undef;
     step = 16 : case
                   r = reg4 : quat_reg4;
                   TRUE : quat_reg3;
                 esac;
     step = 22 : quat_reg2;

-- Without this step the value "quat_reg2" would remain in "reg1":
--     step = 23  & ABS_beta_n_GRT_beta_max & !high_rate_sep : undef;

     TRUE : q_gcb_i;
   esac;

 next(oms_nz_lim) :=
   case
     next(start) = TRUE : undef;          -- Assumed initialization
     step = 9 & q_bar_a_LT_qbar_oms_dump & r != reg102 : oms_nz_lim_3eo;
     step = 12 & mm602_OK : oms_nz_lim_std;
     TRUE : oms_nz_lim;
   esac;

 next(contingency_nz_lim) :=
   case
     next(start) = TRUE : undef;          -- Assumed initialization
     step = 9 & q_bar_a_LT_qbar_oms_dump & r != reg102 :
                                        contingency_nz_lim_3eo;
     step = 12 & mm602_OK : contingency_nz_lim_std;
     TRUE : contingency_nz_lim;
   esac;

DEFINE
 finished := step = exit;
 idle := step = undef;

 start_cont_3eo_mode_select :=
   case
     step = 1 & !cont_3EO_start : TRUE;
     TRUE : FALSE;
   esac;

  nextstep :=
    case
     step = 1 : a1;
     step = a1 : case
                   (cont_3EO_start | mode_select_completed) : 2;
                   TRUE : step;
                 esac;
     step = 2 : case
                  !cont_3EO_start : exit;
                  first3 : 3;
                  TRUE: 4;
                esac;
     step = 3 : 4;
     step = 4 : case
                  et_sep_cmd : 7;
                  TRUE : 5;
                esac;
     step = 5 : case
                  h_dot_LT_0 & q_bar_a_GRT_qbar_max_sep &
                                          m_mode != mm102 : exit;
                  TRUE : 6;
                esac;
     step = 6 :
         case
           r = reg102 : 13;
           r in {reg3, reg4} : 15;
           r = reg2 : 22;
           r = reg1 : 27;
           TRUE : exit;
         esac;
     step = 7 : case
                  cont_minus_z_compl : 8;
                  TRUE : exit;
                esac;
     step = 8 : case
                  excess_OMS_propellant & first8 : 9;
                  TRUE : 10;
                esac;
     step = 9 : exit;
    step = 10 : case
                  !entry_mnvr_couter_LE_0 | rcs_all_jet_inhibit : exit;
                  TRUE : 11;
                esac;
    step = 11 : 12;
    step = 12 : exit;
    step = 13 : 14;
    step = 14 : exit;
    step = 15 : 16;
    step = 16 : 17;
    step = 17 : case
                  r = reg4 : 18;
                  TRUE : 20;
                esac;
    step = 18 : case
                  pch_cmd_reg4 | cond_18 : 19;
                  TRUE : exit;
                esac;
    step = 19 : exit;
    step = 20 : case
                  ABS_alf_err_LT_alf_sep_err : b20;
                  TRUE : c20;
                esac;
    step = b20 : case
                   cond_20b : d20;
                   TRUE : exit;
                 esac;
    step = c20 : case
                   alpha_ok : d20;
                   TRUE : 21;
                 esac;
    step = d20 : exit;
    TRUE : nextstep21;
  esac;

 nextstep21 :=
  case
    step = 21 : case
                  cond_21 : 15;
                  TRUE : exit;
                esac;
    step = 22 : 23;
    step = 23 : case
                  ABS_beta_n_GRT_beta_max & !high_rate_sep : 27;
                  TRUE : 24;
                esac;
    step = 24 : case
                  cond_24 | high_rate_sep : 25;
                  TRUE : exit;
                esac;
    step = 25 : 26;
    step = 26 : exit;
    step = 27 : 28;
    step = 28 : case
                  !et_sep_man_initiate : 29;
                  TRUE : exit;
                esac;
    step = 29 : exit;
    start : 1;
    step = exit : undef;
    TRUE : step;
   esac;

 post_sep_mode := step in {7,8,9,10,11,12};